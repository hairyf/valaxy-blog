import{_ as m}from"./ValaxyMain.vue_vue_type_script_setup_true_lang-_PHymMwZ.js";import{b,e as f,w as n,f as p,a as h,p as d,g as t,i as k,h as l,r as i}from"./app-C5E7XBok.js";const H={__name:"regret",setup(v,{expose:u}){const s=JSON.parse('{"title":"Git 回退与指针","description":"","frontmatter":{"title":"Git 回退与指针","date":"2019-10-07 16:48:00","categories":["Notes","Git"],"tags":["Git"]},"headers":[{"level":2,"title":"工作目录文件撤销","slug":"工作目录文件撤销","link":"#工作目录文件撤销","children":[]},{"level":2,"title":"暂存区文件撤销","slug":"暂存区文件撤销","link":"#暂存区文件撤销","children":[]},{"level":2,"title":"覆盖提交","slug":"覆盖提交","link":"#覆盖提交","children":[]},{"level":2,"title":"reset 回退三部曲","slug":"reset-回退三部曲","link":"#reset-回退三部曲","children":[{"level":3,"title":"回退提交","slug":"回退提交","link":"#回退提交","children":[]},{"level":3,"title":"回退暂存区（索引）","slug":"回退暂存区-索引","link":"#回退暂存区-索引","children":[]},{"level":3,"title":"回退工作目录","slug":"回退工作目录","link":"#回退工作目录","children":[]}]},{"level":2,"title":"reset 文件路径","slug":"reset-文件路径","link":"#reset-文件路径","children":[]},{"level":2,"title":"reset [bran-hash]（指定指针）","slug":"reset-bran-hash-指定指针","link":"#reset-bran-hash-指定指针","children":[]},{"level":2,"title":"checkout [bran-hash]（指定指针）","slug":"checkout-bran-hash-指定指针","link":"#checkout-bran-hash-指定指针","children":[{"level":3,"title":"退回v2版本并创建、切换该分支","slug":"退回v2版本并创建、切换该分支","link":"#退回v2版本并创建、切换该分支","children":[]}]}],"relativePath":"pages/posts/notes/git/regret.md","path":"/home/runner/work/valaxy-blog/valaxy-blog/pages/posts/notes/git/regret.md","lastUpdated":1725453888000}'),o=h(),a=s.frontmatter||{};return o.meta.frontmatter=Object.assign(o.meta.frontmatter||{},s.frontmatter||{}),d("pageData",s),d("valaxy:frontmatter",a),globalThis.$frontmatter=a,u({frontmatter:{title:"Git 回退与指针",date:"2019-10-07 16:48:00",categories:["Notes","Git"],tags:["Git"]}}),(r,e)=>{const g=m;return b(),f(g,{frontmatter:p(a)},{"main-content-md":n(()=>[e[0]||(e[0]=t("p",null,"Git 强大的撤销、版本回退功能，让我们在开发的过程中能够随意的回到任何一个时间点的状态，本文将从如下三个方面介绍 Git 中的后悔药：",-1)),e[1]||(e[1]=t("ul",null,[t("li",null,"工作区的代码想撤销"),t("li",null,"add 到暂存区的代码想撤销"),t("li",null,"提交到本地仓库的代码想撤销")],-1)),k(" more "),e[2]||(e[2]=t("h2",{id:"工作目录文件撤销",tabindex:"-1"},[l("工作目录文件撤销 "),t("a",{class:"header-anchor",href:"#工作目录文件撤销","aria-label":'Permalink to "工作目录文件撤销"'},"​")],-1)),e[3]||(e[3]=t("p",null,[t("strong",null,"命令"),l("："),t("code",null,"git checkout -- 文件名"),t("strong",null,"作用"),l("：将在工作目录中对文件的修改撤销")],-1)),e[4]||(e[4]=t("h2",{id:"暂存区文件撤销",tabindex:"-1"},[l("暂存区文件撤销 "),t("a",{class:"header-anchor",href:"#暂存区文件撤销","aria-label":'Permalink to "暂存区文件撤销"'},"​")],-1)),e[5]||(e[5]=t("p",null,[t("strong",null,"命令"),l("："),t("code",null,"git reset HEAD 文件名"),t("strong",null,"作用"),l("：将文件从暂存区中撤回到工作目录")],-1)),e[6]||(e[6]=t("h2",{id:"覆盖提交",tabindex:"-1"},[l("覆盖提交 "),t("a",{class:"header-anchor",href:"#覆盖提交","aria-label":'Permalink to "覆盖提交"'},"​")],-1)),e[7]||(e[7]=t("p",null,[t("strong",null,"命令"),l("："),t("code",null,"git commit --amend"),t("strong",null,"作用"),l("：这个命令会将暂存区中的文件提交，并将上一次提交覆盖")],-1)),e[8]||(e[8]=t("p",null,"如果你提交后发现忘记了暂存某些需要的修改，可以像下面这样操作",-1)),e[9]||(e[9]=t("ol",null,[t("li",null,[t("code",null,"git commit -m 'initial commit' --->[提交了但发现还有东西要修改]")]),t("li",null,[t("code",null,"git add forgotten_file ---> [修改后添加入暂存]")]),t("li",null,[t("code",null,"git commit –amend ---> [覆盖之前的提交]")])],-1)),e[10]||(e[10]=t("p",null,"最终你只会有一个提交 - 第二次提交将代替第一次提交的结果",-1)),e[11]||(e[11]=t("h2",{id:"reset-回退三部曲",tabindex:"-1"},[l("reset 回退三部曲 "),t("a",{class:"header-anchor",href:"#reset-回退三部曲","aria-label":'Permalink to "reset 回退三部曲"'},"​")],-1)),e[12]||(e[12]=t("p",null,"reset 做的第一件事是移动 HEAD 的指向，假设我们再次修改了 file.txt 文件并第三次提交它。 现在的历史看 起来是这样",-1)),e[13]||(e[13]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ecec7b8c61dc3b8ec7790b.jpg",alt:"commitv3",loading:"lazy",decoding:"async"})],-1)),e[14]||(e[14]=t("h3",{id:"回退提交",tabindex:"-1"},[l("回退提交 "),t("a",{class:"header-anchor",href:"#回退提交","aria-label":'Permalink to "回退提交"'},"​")],-1)),e[15]||(e[15]=t("p",null,[l("**"),t("code",null,"git reset –soft HEAD~"),l("，回退指针。**这与改变 HEAD 自身不同（checkout 所做的）；reset 移动 HEAD 指向的分支。")],-1)),e[16]||(e[16]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ecec8a8c61dc3b8ec7b603.jpg",alt:"reset",loading:"lazy",decoding:"async"})],-1)),e[17]||(e[17]=t("p",null,[l("看一眼上图，理解一下发生的事情：它本质上是"),t("strong",null,"撤销了上一次 git commit 命令"),l("。 当你在运行 git commit 时，Git 会创建一个新的提交，并 移动 HEAD 所指向的分支来使其指向该提交。")],-1)),e[18]||(e[18]=t("p",null,[l("当你将它 reset 回 HEAD~（HEAD 的父结点）时，其实就是把该分支移 动回原来的位置，而不会改变索引和工作目录。 现在你可以更新索引并"),t("strong",null,"再次运 行 git commit 来完成 git commit --amend 所要做的事情了。")],-1)),e[19]||(e[19]=t("h3",{id:"回退暂存区-索引",tabindex:"-1"},[l("回退暂存区（索引） "),t("a",{class:"header-anchor",href:"#回退暂存区-索引","aria-label":'Permalink to "回退暂存区（索引）"'},"​")],-1)),e[20]||(e[20]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ecec988c61dc3b8ec7ebd5.jpg",alt:"resetv2",loading:"lazy",decoding:"async"})],-1)),e[21]||(e[21]=t("p",null,[t("strong",null,"注意： git reset HEAD~ 等同于 git reset –mixed HEAD~")],-1)),e[22]||(e[22]=t("p",null,"理解一下发生的事情：它依然会撤销一上次 提交，但还会 取消暂存 所有 的东西。 于是，我们回滚到了所有 git add 和 git commit 的命令执行之前。",-1)),e[23]||(e[23]=t("h3",{id:"回退工作目录",tabindex:"-1"},[l("回退工作目录 "),t("a",{class:"header-anchor",href:"#回退工作目录","aria-label":'Permalink to "回退工作目录"'},"​")],-1)),e[24]||(e[24]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ececa38c61dc3b8ec81251.jpg",alt:"resetv3",loading:"lazy",decoding:"async"})],-1)),e[25]||(e[25]=t("p",null,[t("strong",null,[t("code",null,"git reset --hard HEAD~"),l("：你撤销了最后的提交、git add 和 git commit 命令以及工作目录 中的所有工作。")])],-1)),e[26]||(e[26]=t("p",null,[t("strong",null,"必须注意"),l("：–hard 标记是 reset 命令唯一的危险用法，它也是 Git 会 真正地销毁数据的仅有的几个操作之一。 其他任何形式的 reset 调用都可 以轻松撤消，但是 --hard 选项不能，因为它强制覆盖了工作目录中的文件。 在这种特殊情况下，我们的 Git 数据库中的一个提交内还留有该文件的 v3 版 本，"),t("strong",null,"我们可以通过 reflog 来找回它"),l("。但是若该文件还未提交，Git 仍会覆 盖它从而导致无法恢复。")],-1)),e[27]||(e[27]=t("h2",{id:"reset-文件路径",tabindex:"-1"},[l("reset 文件路径 "),t("a",{class:"header-anchor",href:"#reset-文件路径","aria-label":'Permalink to "reset 文件路径"'},"​")],-1)),e[28]||(e[28]=t("p",null,[l("reset 还可以给它提供一个作用路径。 若 指定了一个路径，"),t("strong",null,"reset 将会跳过第 1 步"),l("，并且将它的作用范围限定为指定的文 件或文件集合。")],-1)),e[29]||(e[29]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ececaf8c61dc3b8ec8387e.jpg",alt:"resetfile",loading:"lazy",decoding:"async"})],-1)),e[30]||(e[30]=t("p",null,[l("现在，假如我们运行 "),t("strong",null,"git reset file.txt"),l(" （这其实是 git reset --mixed HEAD file.txt 的简写形式，），它会： "),t("code",null,"移动 HEAD 分支的指向 （因为是文件这一步忽略）"),t("code",null,"将 file.txt 从 HEAD 复制到索引中")],-1)),e[31]||(e[31]=t("figure",null,[t("img",{src:"https://pic.imgdb.cn/item/62ececca8c61dc3b8ec89044.jpg",alt:"resetfilev2",loading:"lazy",decoding:"async"})],-1)),e[32]||(e[32]=t("h2",{id:"reset-bran-hash-指定指针",tabindex:"-1"},[l("reset [bran-hash]（指定指针） "),t("a",{class:"header-anchor",href:"#reset-bran-hash-指定指针","aria-label":'Permalink to "reset [bran-hash]（指定指针）"'},"​")],-1)),e[33]||(e[33]=t("p",null,[t("code",null,"git reset [分支hash]"),l("：将"),t("code",null,"HEAD"),l("、"),t("code",null,"Index"),l("、"),t("code",null,"Working"),l("直接跳到所对应分支上")],-1)),e[34]||(e[34]=t("h2",{id:"checkout-bran-hash-指定指针",tabindex:"-1"},[l("checkout [bran-hash]（指定指针） "),t("a",{class:"header-anchor",href:"#checkout-bran-hash-指定指针","aria-label":'Permalink to "checkout [bran-hash]（指定指针）"'},"​")],-1)),e[35]||(e[35]=t("p",null,[t("strong",null,"运行 git checkout [branch] 与运行 git reset [branch] 非常相似"),l("，它会更新三者使其看起来像 [branch]，不过有两 点重要的区别")],-1)),e[36]||(e[36]=t("p",null,[t("strong",null,"首先不同于 reset --hard，checkout 对工作目录是安全的"),l("，它会 通过检查来确保不会将已更改的文件弄丢。而 reset --hard 则会不做检 查就全面地替换所有东西。")],-1)),e[37]||(e[37]=t("p",null,"第二个重要的区别是如何更新 HEAD。 reset 会移动 HEAD 分支的 指向，而 checkout 只会移动 HEAD 自身来指向另一个分支。",-1)),e[38]||(e[38]=t("h3",{id:"退回v2版本并创建、切换该分支",tabindex:"-1"},[l("退回v2版本并创建、切换该分支 "),t("a",{class:"header-anchor",href:"#退回v2版本并创建、切换该分支","aria-label":'Permalink to "退回v2版本并创建、切换该分支"'},"​")],-1)),e[39]||(e[39]=t("p",null,[t("code",null,"$ git branch -b 分支名 提交对象hash")],-1))]),"main-header":n(()=>[i(r.$slots,"main-header")]),"main-header-after":n(()=>[i(r.$slots,"main-header-after")]),"main-nav":n(()=>[i(r.$slots,"main-nav")]),"main-content":n(()=>[i(r.$slots,"main-content")]),"main-content-after":n(()=>[i(r.$slots,"main-content-after")]),"main-nav-before":n(()=>[i(r.$slots,"main-nav-before")]),"main-nav-after":n(()=>[i(r.$slots,"main-nav-after")]),comment:n(()=>[i(r.$slots,"comment")]),footer:n(()=>[i(r.$slots,"footer")]),aside:n(()=>[i(r.$slots,"aside")]),"aside-custom":n(()=>[i(r.$slots,"aside-custom")]),default:n(()=>[i(r.$slots,"default")]),_:3},8,["frontmatter"])}}};export{H as default};
