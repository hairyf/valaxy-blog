import{_ as m}from"./ValaxyMain.vue_vue_type_script_setup_true_lang-_PHymMwZ.js";import{b as f,e as v,w as n,f as S,a as b,p as u,g as l,h as t,i as N,r as o}from"./app-C5E7XBok.js";const J={__name:"index",setup(j,{expose:d}){const r=JSON.parse('{"title":"NodeJS 服务端 JavaScript 解释器","description":"","frontmatter":{"title":"NodeJS 服务端 JavaScript 解释器","date":"2020-05-03 14:00:00","categories":["Notes","Server","NodeJS"],"tags":["NodeJS"]},"headers":[{"level":2,"title":"基本特点","slug":"基本特点","link":"#基本特点","children":[]},{"level":2,"title":"基本用途","slug":"基本用途","link":"#基本用途","children":[]},{"level":2,"title":"I/O(Input/Output)","slug":"i-o-input-output","link":"#i-o-input-output","children":[]},{"level":2,"title":"JavaScript 引擎","slug":"javascript-引擎","link":"#javascript-引擎","children":[]},{"level":2,"title":"Node.js 内建对象","slug":"node-js-内建对象","link":"#node-js-内建对象","children":[]},{"level":2,"title":"命令行","slug":"命令行","link":"#命令行","children":[]},{"level":2,"title":"开启调试模式","slug":"开启调试模式","link":"#开启调试模式","children":[]}],"relativePath":"pages/posts/notes/server/nodejs/index.md","path":"/home/runner/work/valaxy-blog/valaxy-blog/pages/posts/notes/server/nodejs/index.md","lastUpdated":1725453888000}'),s=b(),i=r.frontmatter||{};return s.meta.frontmatter=Object.assign(s.meta.frontmatter||{},r.frontmatter||{}),u("pageData",r),u("valaxy:frontmatter",i),globalThis.$frontmatter=i,d({frontmatter:{title:"NodeJS 服务端 JavaScript 解释器",date:"2020-05-03 14:00:00",categories:["Notes","Server","NodeJS"],tags:["NodeJS"]}}),(a,e)=>{const p=m;return f(),v(p,{frontmatter:S(i)},{"main-content-md":n(()=>[e[0]||(e[0]=l("p",null,[t("Node.js 发布于2009年5月，由 Ryan Dahl 开发，是一个基于 "),l("a",{href:"https://baike.baidu.com/item/Google%20Chrome/5638378?fromtitle=Chrome&fromid=5633839",target:"_blank",rel:"noreferrer"},"Chrome"),t(),l("a",{href:"https://baike.baidu.com/item/V8/6178125",target:"_blank",rel:"noreferrer"},"V8"),t(" 引擎的 JavaScript 运行环境，使用了一个事件驱动、非阻塞式I/O模型，让 JavaScript 运行在服务端的开发平台，它让 JavaScript 成为与 PHP、Python、Perl、Ruby 等服务端语言平起平坐的脚本语言。")],-1)),N(" more "),e[1]||(e[1]=l("h2",{id:"基本特点",tabindex:"-1"},[t("基本特点 "),l("a",{class:"header-anchor",href:"#基本特点","aria-label":'Permalink to "基本特点"'},"​")],-1)),e[2]||(e[2]=l("ul",null,[l("li",null,[l("p",null,"Node.js 大部分基本模块都用 JavaScript 编写。在 Node.js 出现之前，JavaScript 通常作为客户端程序设计语言使用，以 JavaScript 写出的程序常在用户的浏览器上运行。")]),l("li",null,[l("p",null,"Node.js 已被 IBM、Microsoft、Yahoo!、Walmart、Groupon、SAP、 LinkedIn、Rakuten、PayPal、VoxerGoDaddy 等企业采用。")]),l("li",null,[l("p",null,"Node.js 是事件驱动的。开发者可以在不使用线程的情况下开发出一个能够承载高并发的服务器。其他服务器端语言难以开发高并发应用，而且即使开发出来，性能也不尽人意，Node正是在这个前提下被创造出来。")]),l("li",null,[l("p",null,"Node.js 把 JavaScript 的易学易用和 Unix 网络编程的强大结合到了一起。")]),l("li",null,[l("p",null,"Node.js 允许通过 JavaScript 和一系列模块来编写服务器端应用和网络相关的应用。")]),l("li",null,[l("p",null,"Node.js 核心模块包括文件系统 I/O、网络（HTTP、TCP、UDP、DNS、TLS/SSL等）、二进制数据流、加密算法、数据流等等。Node.js 模块的 API 形式简单，降低了编程的复杂度。")]),l("li",null,[l("p",null,"Node.js 有强大的开源社区，使用框架可以加速开发。常用的框架有 Express.js、Socket.IO和 Connect 等。Node.js 的程序可以在 Microsoft Windows、Linux、Unix、Mac OS X 等服务器上运行。")]),l("li",null,[l("p",null,"Node.js 也可以使用 CoffeeScript、TypeScript、Dart 语言，以及其他能够编译成 JavaScript 的语言编程。")])],-1)),e[3]||(e[3]=l("h2",{id:"基本用途",tabindex:"-1"},[t("基本用途 "),l("a",{class:"header-anchor",href:"#基本用途","aria-label":'Permalink to "基本用途"'},"​")],-1)),e[4]||(e[4]=l("ul",null,[l("li",null,"Web服务 API，比如 REST"),l("li",null,"实时多人游戏"),l("li",null,"后端 Web 服务，例如跨域、服务器端的请求"),l("li",null,"基于 Web 的应用"),l("li",null,"多客户端的通信，如即时通信")],-1)),e[5]||(e[5]=l("h2",{id:"i-o-input-output",tabindex:"-1"},[t("I/O(Input/Output) "),l("a",{class:"header-anchor",href:"#i-o-input-output","aria-label":'Permalink to "I/O(Input/Output)"'},"​")],-1)),e[6]||(e[6]=l("p",null,"I/O操作指的是对磁盘的读写操作",-1)),e[7]||(e[7]=l("h2",{id:"javascript-引擎",tabindex:"-1"},[t("JavaScript 引擎 "),l("a",{class:"header-anchor",href:"#javascript-引擎","aria-label":'Permalink to "JavaScript 引擎"'},"​")],-1)),e[8]||(e[8]=l("ul",null,[l("li",null,"Node.js 是对 ES 标准一个实现，Node.js 也是一个 JS 引擎，通过 Node.js 可以使 js 代码在服务器端执行"),l("li",null,"Node.js 仅仅对 ES 标准进行了实现，所以在 Node.js 中不包含 DOM 和 BOM"),l("li",null,"Node.js 编写都是单线程的服务器"),l("li",null,[t("Node.js 处理请求时是单线程，但是在后台拥有一个 "),l("code",null,"I/O"),t(" 线程池")])],-1)),e[9]||(e[9]=l("h2",{id:"node-js-内建对象",tabindex:"-1"},[t("Node.js 内建对象 "),l("a",{class:"header-anchor",href:"#node-js-内建对象","aria-label":'Permalink to "Node.js 内建对象"'},"​")],-1)),e[10]||(e[10]=l("ul",null,[l("li",null,"String"),l("li",null,"Number"),l("li",null,"Boolean"),l("li",null,"Math"),l("li",null,"Date"),l("li",null,"RegExp"),l("li",null,"Function"),l("li",null,"Object"),l("li",null,"Array")],-1)),e[11]||(e[11]=l("blockquote",null,[l("p",null,[l("code",null,"BOM"),t("，"),l("code",null,"DOM"),t(" 不能使用，但是可以使用 "),l("code",null,"console"),t(" 也可以使用定时器 "),l("code",null,"setTimeout()"),t("、"),l("code",null,"setInterval()")])],-1)),e[12]||(e[12]=l("h2",{id:"命令行",tabindex:"-1"},[t("命令行 "),l("a",{class:"header-anchor",href:"#命令行","aria-label":'Permalink to "命令行"'},"​")],-1)),e[13]||(e[13]=l("p",null,"Node.js 通常运行在命令行中，所以我们先掌握基本的命令行指令",-1)),e[14]||(e[14]=l("ol",null,[l("li",null,[l("code",null,"开始菜单 --> 运行 --> CMD --> 回车")]),l("li",null,[l("code",null,"Win + R --> CMD --> 回车")])],-1)),e[15]||(e[15]=l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"命令"),l("th",null,"功能")])]),l("tbody",null,[l("tr",null,[l("td",null,"dir"),l("td",null,"列出当前目录下的所有文件")]),l("tr",null,[l("td",null,"cd 目录名"),l("td",null,"进入到指定的目录")]),l("tr",null,[l("td",null,"md 目录名"),l("td",null,"创建一个文件夹")]),l("tr",null,[l("td",null,"rd 目录名"),l("td",null,"删除一个文件夹")])])],-1)),e[16]||(e[16]=l("ul",null,[l("li",null,[l("code",null,"."),t(" 表示当前目录")]),l("li",null,[l("code",null,".."),t(" 表示上一级目录")])],-1)),e[17]||(e[17]=l("h2",{id:"开启调试模式",tabindex:"-1"},[t("开启调试模式 "),l("a",{class:"header-anchor",href:"#开启调试模式","aria-label":'Permalink to "开启调试模式"'},"​")],-1)),e[18]||(e[18]=l("div",{class:"language- vp-adaptive-theme"},[l("button",{title:"Copy Code",class:"copy"}),l("span",{class:"lang"}),l("pre",{class:"shiki shiki-themes material-theme-darker material-theme-lighter vp-code"},[l("code",{"v-pre":""},[l("span",{class:"line"},[l("span",null,"node --inspect-brk file.js")])])]),l("button",{class:"collapse"})],-1)),e[19]||(e[19]=l("p",null,"打开浏览器，点击控制台的 node 标签",-1))]),"main-header":n(()=>[o(a.$slots,"main-header")]),"main-header-after":n(()=>[o(a.$slots,"main-header-after")]),"main-nav":n(()=>[o(a.$slots,"main-nav")]),"main-content":n(()=>[o(a.$slots,"main-content")]),"main-content-after":n(()=>[o(a.$slots,"main-content-after")]),"main-nav-before":n(()=>[o(a.$slots,"main-nav-before")]),"main-nav-after":n(()=>[o(a.$slots,"main-nav-after")]),comment:n(()=>[o(a.$slots,"comment")]),footer:n(()=>[o(a.$slots,"footer")]),aside:n(()=>[o(a.$slots,"aside")]),"aside-custom":n(()=>[o(a.$slots,"aside-custom")]),default:n(()=>[o(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{J as default};
